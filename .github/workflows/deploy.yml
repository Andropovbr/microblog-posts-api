name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main       # Aciona para o ambiente de dev
      - production # Aciona para o ambiente de prod

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    # --- NOVO: Define o ambiente com base na branch ---
    environment: ${{ github.ref == 'refs/heads/production' && 'production' || 'development' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- NOVO PASSO DE DEPURAÇÃO ---
      - name: List files in workspace
        run: ls -laR
      # --------------------------------

      - name: Debug GitHub Context
        run: echo "${{ toJSON(github) }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }} # Segredo do ambiente
          aws-region: ${{ secrets.AWS_REGION }}             # Segredo do ambiente

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:latest
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:latest
          echo "image=$ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Replace execution role ARN in task definition
        run: |
          sed -i "s|\${ECS_EXECUTION_ROLE_ARN}|${{ secrets.ECS_EXECUTION_ROLE_ARN }}|g" ${{ secrets.ECS_TASK_DEFINITION }}

      - name: Replace DB secret ARN in task definition
        run: |
          sed -i "s|\${DB_SECRET_ARN}|${{ secrets.DB_SECRET_ARN }}|g" ${{ secrets.ECS_TASK_DEFINITION }}

      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }} # Segredo do ambiente
          cluster: ${{ secrets.ECS_CLUSTER }} # Segredo do ambiente
          wait-for-service-stability: true